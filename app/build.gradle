apply plugin: 'com.android.application'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.practice.practicemvvm"
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dataBinding {
        enabled = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'


    implementation "com.google.android.material:material:$materialDesignVersion"

//dragger
    implementation "com.google.dagger:dagger-android:$draggerVersion" // core version
    implementation "com.google.dagger:dagger-android-support:$draggerVersion" // if you use the support libraries, android version
    annotationProcessor "com.google.dagger:dagger-android-processor:$draggerVersion"
    annotationProcessor "com.google.dagger:dagger-compiler:$draggerVersion"
//end of dragger

//retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofitVersion"
    implementation "com.squareup.moshi:moshi:$moshiVersion"
    annotationProcessor "com.ryanharter.auto.value:auto-value-moshi:$autoValueMoshiVersion"
    compileOnly "com.ryanharter.auto.value:auto-value-moshi-annotations:$autoValueMoshiVersion"

    compileOnly  "com.google.auto.value:auto-value:$autoValueVersion"
    annotationProcessor "com.google.auto.value:auto-value:$autoValueVersion"

    implementation "com.squareup.retrofit2:converter-gson:$gsonVersion" // using gson for now
//end of retrofit

//rxjava
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"
    implementation "io.reactivex.rxjava2:rxjava:$rxJavaVersion"
    implementation "com.jakewharton.rxrelay2:rxrelay:$rxRelayVersion"
//end of rxjava

// three ten android backport for backup ZoneDateTime from android
// instead of using the default we will be using the third party lib
    implementation "com.jakewharton.threetenabp:threetenabp:$threeTenAbpVersion"
// conductor
    implementation "com.bluelinelabs:conductor:$conductorVersion"

//log files
    implementation "com.jakewharton.timber:timber:$timberVersion"
//butterKnife
    implementation "com.jakewharton:butterknife:$butterKnifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$butterKnifeVersion"

    implementation "androidx.multidex:multidex:$multiDexAppVersion"

// glide
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    implementation "jp.wasabeef:glide-transformations:$glideTransformationVersion"
    annotationProcessor "com.github.bumptech.glide:compiler:$glideVersion"

    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"

    annotationProcessor "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"

    // Room Database

    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    implementation 'android.arch.navigation:navigation-fragment:1.0.0'
    implementation 'android.arch.navigation:navigation-ui:1.0.0'
}
